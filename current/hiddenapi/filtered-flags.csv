Landroid/healthconnect/AggregateRecordsRequest$Builder;-><init>(Landroid/healthconnect/TimeRangeFilter;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/AggregateRecordsRequest$Builder;->addAggregationType(Landroid/healthconnect/datatypes/AggregationType;)Landroid/healthconnect/AggregateRecordsRequest$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/AggregateRecordsRequest$Builder;->addDataOriginsFilter(Landroid/healthconnect/datatypes/DataOrigin;)Landroid/healthconnect/AggregateRecordsRequest$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/AggregateRecordsRequest$Builder;->build()Landroid/healthconnect/AggregateRecordsRequest;,public-api,sdk,system-api,test-api
Landroid/healthconnect/AggregateRecordsRequest;->getAggregationTypes()Ljava/util/Set;,public-api,sdk,system-api,test-api
Landroid/healthconnect/AggregateRecordsRequest;->getDataOriginsFilters()Ljava/util/Set;,public-api,sdk,system-api,test-api
Landroid/healthconnect/AggregateRecordsRequest;->getTimeRangeFilter()Landroid/healthconnect/TimeRangeFilter;,public-api,sdk,system-api,test-api
Landroid/healthconnect/AggregateRecordsResponse$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;Ljava/lang/Object;)V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/AggregateRecordsResponse;->get(Landroid/healthconnect/datatypes/AggregationType;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ApplicationInfoResponse;->getApplicationInfoList()Ljava/util/List;,sdk,system-api,test-api
Landroid/healthconnect/ChangeLogTokenRequest$Builder;-><init>()V,public-api,sdk,system-api,test-api
Landroid/healthconnect/ChangeLogTokenRequest$Builder;->addDataOriginFilter(Landroid/healthconnect/datatypes/DataOrigin;)Landroid/healthconnect/ChangeLogTokenRequest$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ChangeLogTokenRequest$Builder;->addRecordType(Ljava/lang/Class;)Landroid/healthconnect/ChangeLogTokenRequest$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ChangeLogTokenRequest$Builder;->build()Landroid/healthconnect/ChangeLogTokenRequest;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ChangeLogTokenRequest;->getDataOriginFilters()Ljava/util/Set;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ChangeLogTokenRequest;->getRecordTypes()Ljava/util/Set;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ChangeLogsRequest$Builder;-><init>(Ljava/lang/String;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/ChangeLogsRequest$Builder;->build()Landroid/healthconnect/ChangeLogsRequest;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ChangeLogsRequest$Builder;->setPageSize(I)Landroid/healthconnect/ChangeLogsRequest$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ChangeLogsRequest;->getPageSize()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/ChangeLogsRequest;->getToken()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ChangeLogsResponse;->getDeletedRecordIds()Ljava/util/List;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ChangeLogsResponse;->getNextChangesToken()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ChangeLogsResponse;->getUpsertedRecords()Ljava/util/List;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ChangeLogsResponse;->hasMorePages()Z,public-api,sdk,system-api,test-api
Landroid/healthconnect/DeleteUsingFiltersRequest$Builder;-><init>()V,sdk,system-api,test-api
Landroid/healthconnect/DeleteUsingFiltersRequest$Builder;->addDataOrigin(Landroid/healthconnect/datatypes/DataOrigin;)Landroid/healthconnect/DeleteUsingFiltersRequest$Builder;,sdk,system-api,test-api
Landroid/healthconnect/DeleteUsingFiltersRequest$Builder;->addRecordType(Ljava/lang/Class;)Landroid/healthconnect/DeleteUsingFiltersRequest$Builder;,sdk,system-api,test-api
Landroid/healthconnect/DeleteUsingFiltersRequest$Builder;->build()Landroid/healthconnect/DeleteUsingFiltersRequest;,sdk,system-api,test-api
Landroid/healthconnect/DeleteUsingFiltersRequest$Builder;->clearDataOrigins()Landroid/healthconnect/DeleteUsingFiltersRequest$Builder;,sdk,system-api,test-api
Landroid/healthconnect/DeleteUsingFiltersRequest$Builder;->clearRecordTypes()Landroid/healthconnect/DeleteUsingFiltersRequest$Builder;,sdk,system-api,test-api
Landroid/healthconnect/DeleteUsingFiltersRequest$Builder;->setTimeRangeFilter(Landroid/healthconnect/TimeRangeFilter;)Landroid/healthconnect/DeleteUsingFiltersRequest$Builder;,sdk,system-api,test-api
Landroid/healthconnect/DeleteUsingFiltersRequest;->getDataOrigins()Ljava/util/Set;,sdk,system-api,test-api
Landroid/healthconnect/DeleteUsingFiltersRequest;->getRecordTypes()Ljava/util/Set;,sdk,system-api,test-api
Landroid/healthconnect/DeleteUsingFiltersRequest;->getTimeRangeFilter()Landroid/healthconnect/TimeRangeFilter;,sdk,system-api,test-api
Landroid/healthconnect/GetDataOriginPriorityOrderResponse;->getDataOriginInPriorityOrder()Ljava/util/List;,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectException;-><init>(I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectException;-><init>(ILjava/lang/String;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectException;->ERROR_INTERNAL:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectException;->ERROR_INVALID_ARGUMENT:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectException;->ERROR_IO:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectException;->ERROR_REMOTE:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectException;->ERROR_SECURITY:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectException;->ERROR_UNKNOWN:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectException;->getErrorCode()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager$1$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager$10$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager$11$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager$12$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager$13$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager$14$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager$2$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager$3$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager$4$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager$5$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager$6$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager$7$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager$8$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager$9$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->ACTION_HEALTH_HOME_SETTINGS:Ljava/lang/String;,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->ACTION_MANAGE_HEALTH_PERMISSIONS:Ljava/lang/String;,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->ACTION_MANAGE_HEALTH_PERMISSIONS_AND_DATA:Ljava/lang/String;,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->CATEGORY_HEALTH_PERMISSIONS:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->aggregate(Landroid/healthconnect/AggregateRecordsRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->deleteRecords(Landroid/healthconnect/DeleteUsingFiltersRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->deleteRecords(Ljava/lang/Class;Landroid/healthconnect/TimeRangeFilter;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->deleteRecords(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->getChangeLogToken(Landroid/healthconnect/ChangeLogTokenRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->getChangeLogs(Landroid/healthconnect/ChangeLogsRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->getContributorApplicationsInfo(Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->getDataOriginsInPriorityOrder(ILjava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->getHealthPermissions(Landroid/content/Context;)Ljava/util/Set;,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->getRecordRetentionPeriodInDays()I,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->insertRecords(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->isHealthPermission(Landroid/content/Context;Ljava/lang/String;)Z,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->readRecords(Landroid/healthconnect/ReadRecordsRequestUsingFilters;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->readRecords(Landroid/healthconnect/ReadRecordsRequestUsingIds;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->setRecordRetentionPeriodInDays(ILjava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->updateDataOriginPriorityOrder(Landroid/healthconnect/UpdateDataOriginPriorityOrderRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,sdk,system-api,test-api
Landroid/healthconnect/HealthConnectManager;->updateRecords(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthDataCategory;->ACTIVITY:I,sdk,system-api,test-api
Landroid/healthconnect/HealthDataCategory;->BODY_MEASUREMENTS:I,sdk,system-api,test-api
Landroid/healthconnect/HealthDataCategory;->CYCLE_TRACKING:I,sdk,system-api,test-api
Landroid/healthconnect/HealthDataCategory;->NUTRITION:I,sdk,system-api,test-api
Landroid/healthconnect/HealthDataCategory;->SLEEP:I,sdk,system-api,test-api
Landroid/healthconnect/HealthDataCategory;->UNKNOWN:I,sdk,system-api,test-api
Landroid/healthconnect/HealthDataCategory;->VITALS:I,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->HEALTH_PERMISSION_GROUP:Ljava/lang/String;,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->MANAGE_HEALTH_PERMISSIONS:Ljava/lang/String;,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_ACTIVE_CALORIES_BURNED:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_BASAL_BODY_TEMPERATURE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_BASAL_METABOLIC_RATE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_BLOOD_GLUCOSE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_BLOOD_PRESSURE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_BODY_FAT:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_BODY_TEMPERATURE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_BODY_WATER_MASS:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_BONE_MASS:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_CERVICAL_MUCUS:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_DISTANCE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_ELEVATION_GAINED:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_EXERCISE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_FLOORS_CLIMBED:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_HEART_RATE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_HEART_RATE_VARIABILITY:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_HEIGHT:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_HIP_CIRCUMFERENCE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_HYDRATION:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_LEAN_BODY_MASS:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_MENSTRUATION:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_NUTRITION:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_OVULATION_TEST:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_OXYGEN_SATURATION:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_POWER:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_RESPIRATORY_RATE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_RESTING_HEART_RATE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_SEXUAL_ACTIVITY:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_SLEEP:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_SPEED:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_STEPS:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_TOTAL_CALORIES_BURNED:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_VO2_MAX:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_WAIST_CIRCUMFERENCE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_WEIGHT:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->READ_WHEELCHAIR_PUSHES:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_ACTIVE_CALORIES_BURNED:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_BASAL_BODY_TEMPERATURE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_BASAL_METABOLIC_RATE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_BLOOD_GLUCOSE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_BLOOD_PRESSURE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_BODY_FAT:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_BODY_TEMPERATURE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_BODY_WATER_MASS:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_BONE_MASS:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_CERVICAL_MUCUS:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_DISTANCE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_ELEVATION_GAINED:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_EXERCISE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_FLOORS_CLIMBED:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_HEART_RATE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_HEART_RATE_VARIABILITY:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_HEIGHT:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_HIP_CIRCUMFERENCE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_HYDRATION:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_LEAN_BODY_MASS:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_MENSTRUATION:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_NUTRITION:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_OVULATION_TEST:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_OXYGEN_SATURATION:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_POWER:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_RESPIRATORY_RATE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_RESTING_HEART_RATE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_SEXUAL_ACTIVITY:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_SLEEP:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_SPEED:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_STEPS:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_TOTAL_CALORIES_BURNED:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_VO2_MAX:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_WAIST_CIRCUMFERENCE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_WEIGHT:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthPermissions;->WRITE_WHEELCHAIR_PUSHES:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/HealthServicesInitializer$$ExternalSyntheticLambda0;->createService(Landroid/content/Context;Landroid/os/IBinder;)Ljava/lang/Object;,sdk,system-api,test-api
Landroid/healthconnect/InsertRecordsResponse;-><init>(Ljava/util/List;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/InsertRecordsResponse;->getRecords()Ljava/util/List;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ReadRecordsRequestUsingFilters$Builder;-><init>(Ljava/lang/Class;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/ReadRecordsRequestUsingFilters$Builder;->addDataOrigins(Landroid/healthconnect/datatypes/DataOrigin;)Landroid/healthconnect/ReadRecordsRequestUsingFilters$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ReadRecordsRequestUsingFilters$Builder;->build()Landroid/healthconnect/ReadRecordsRequestUsingFilters;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ReadRecordsRequestUsingFilters$Builder;->setTimeRangeFilter(Landroid/healthconnect/TimeRangeFilter;)Landroid/healthconnect/ReadRecordsRequestUsingFilters$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ReadRecordsRequestUsingFilters;->getDataOrigins()Ljava/util/Set;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ReadRecordsRequestUsingFilters;->getRecordType()Ljava/lang/Class;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ReadRecordsRequestUsingFilters;->getTimeRangeFilter()Landroid/healthconnect/TimeRangeFilter;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ReadRecordsRequestUsingIds$Builder;-><init>(Ljava/lang/Class;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/ReadRecordsRequestUsingIds$Builder;->addClientRecordId(Ljava/lang/String;)Landroid/healthconnect/ReadRecordsRequestUsingIds$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ReadRecordsRequestUsingIds$Builder;->addId(Ljava/lang/String;)Landroid/healthconnect/ReadRecordsRequestUsingIds$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ReadRecordsRequestUsingIds$Builder;->build()Landroid/healthconnect/ReadRecordsRequestUsingIds;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ReadRecordsRequestUsingIds;->getRecordIdFilters()Ljava/util/List;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ReadRecordsRequestUsingIds;->getRecordType()Ljava/lang/Class;,public-api,sdk,system-api,test-api
Landroid/healthconnect/ReadRecordsResponse;-><init>(Ljava/util/List;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/ReadRecordsResponse;->getRecords()Ljava/util/List;,public-api,sdk,system-api,test-api
Landroid/healthconnect/RecordIdFilter$Builder;-><init>(Ljava/lang/Class;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/RecordIdFilter$Builder;->build()Landroid/healthconnect/RecordIdFilter;,public-api,sdk,system-api,test-api
Landroid/healthconnect/RecordIdFilter$Builder;->setClientRecordId(Ljava/lang/String;)Landroid/healthconnect/RecordIdFilter$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/RecordIdFilter$Builder;->setId(Ljava/lang/String;)Landroid/healthconnect/RecordIdFilter$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/RecordIdFilter;->getClientRecordId()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/RecordIdFilter;->getId()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/RecordIdFilter;->getRecordType()Ljava/lang/Class;,public-api,sdk,system-api,test-api
Landroid/healthconnect/TimeRangeFilter$Builder;-><init>(Ljava/time/Instant;Ljava/time/Instant;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/TimeRangeFilter$Builder;->build()Landroid/healthconnect/TimeRangeFilter;,public-api,sdk,system-api,test-api
Landroid/healthconnect/TimeRangeFilter;->getEndTime()Ljava/time/Instant;,public-api,sdk,system-api,test-api
Landroid/healthconnect/TimeRangeFilter;->getStartTime()Ljava/time/Instant;,public-api,sdk,system-api,test-api
Landroid/healthconnect/UpdateDataOriginPriorityOrderRequest;-><init>(Ljava/util/List;I)V,sdk,system-api,test-api
Landroid/healthconnect/UpdateDataOriginPriorityOrderRequest;->getDataCategory()I,sdk,system-api,test-api
Landroid/healthconnect/UpdateDataOriginPriorityOrderRequest;->getDataOriginInOrder()Ljava/util/List;,sdk,system-api,test-api
Landroid/healthconnect/aidl/AggregateDataRequestParcel$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/AggregateDataRequestParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/AggregateDataRequestParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/AggregateDataRequestParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/AggregateDataRequestParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/AggregateDataResponseParcel$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;Ljava/lang/Object;)V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/AggregateDataResponseParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/AggregateDataResponseParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/AggregateDataResponseParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/AggregateDataResponseParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ApplicationInfoResponseParcel$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;)V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ApplicationInfoResponseParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ApplicationInfoResponseParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ApplicationInfoResponseParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ApplicationInfoResponseParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ChangeLogTokenRequestParcel$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;)V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ChangeLogTokenRequestParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ChangeLogTokenRequestParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ChangeLogTokenRequestParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ChangeLogTokenRequestParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ChangeLogsRequestParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ChangeLogsRequestParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ChangeLogsRequestParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ChangeLogsRequestParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ChangeLogsResponseParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ChangeLogsResponseParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ChangeLogsResponseParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ChangeLogsResponseParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/DeleteUsingFiltersRequestParcel$$ExternalSyntheticLambda0;->applyAsInt(Ljava/lang/Object;)I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/DeleteUsingFiltersRequestParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/DeleteUsingFiltersRequestParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/DeleteUsingFiltersRequestParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/DeleteUsingFiltersRequestParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/GetPriorityResponseParcel$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/GetPriorityResponseParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/GetPriorityResponseParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/GetPriorityResponseParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/GetPriorityResponseParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/HealthConnectExceptionParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/HealthConnectExceptionParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/HealthConnectExceptionParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/HealthConnectExceptionParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IAggregateRecordsResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IAggregateRecordsResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IAggregateRecordsResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IAggregateRecordsResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IApplicationInfoResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IApplicationInfoResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IApplicationInfoResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IApplicationInfoResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IChangeLogsResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IChangeLogsResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IChangeLogsResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IChangeLogsResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IEmptyResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IEmptyResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IEmptyResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IEmptyResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IGetChangeLogTokenCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IGetChangeLogTokenCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IGetChangeLogTokenCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IGetChangeLogTokenCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IGetPriorityResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IGetPriorityResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IGetPriorityResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IGetPriorityResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IHealthConnectService$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IHealthConnectService$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IHealthConnectService$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IHealthConnectService$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IInsertRecordsResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IInsertRecordsResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IInsertRecordsResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IInsertRecordsResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IReadRecordsResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IReadRecordsResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IReadRecordsResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IReadRecordsResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IRecordTypeInfoResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IRecordTypeInfoResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IRecordTypeInfoResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/IRecordTypeInfoResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/InsertRecordsResponseParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/InsertRecordsResponseParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/InsertRecordsResponseParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/InsertRecordsResponseParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ReadRecordsRequestParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ReadRecordsRequestParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ReadRecordsRequestParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/ReadRecordsRequestParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordIdFiltersParcel$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;)V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordIdFiltersParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordIdFiltersParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordIdFiltersParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordIdFiltersParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordTypeInfoResponseParcel$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;Ljava/lang/Object;)V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordTypeInfoResponseParcel$$ExternalSyntheticLambda1;->accept(Ljava/lang/Object;Ljava/lang/Object;)V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordTypeInfoResponseParcel$$ExternalSyntheticLambda2;->test(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordTypeInfoResponseParcel$$ExternalSyntheticLambda3;->accept(Ljava/lang/Object;Ljava/lang/Object;)V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordTypeInfoResponseParcel$$ExternalSyntheticLambda4;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordTypeInfoResponseParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordTypeInfoResponseParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordTypeInfoResponseParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordTypeInfoResponseParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordsParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordsParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordsParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/RecordsParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/UpdatePriorityRequestParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/UpdatePriorityRequestParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/UpdatePriorityRequestParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/aidl/UpdatePriorityRequestParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ActiveCaloriesBurnedRecord$Builder;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Landroid/healthconnect/datatypes/units/Energy;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ActiveCaloriesBurnedRecord$Builder;->build()Landroid/healthconnect/datatypes/ActiveCaloriesBurnedRecord;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ActiveCaloriesBurnedRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/ActiveCaloriesBurnedRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ActiveCaloriesBurnedRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/ActiveCaloriesBurnedRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ActiveCaloriesBurnedRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ActiveCaloriesBurnedRecord;->getEnergy()Landroid/healthconnect/datatypes/units/Energy;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ActiveCaloriesBurnedRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/AppInfo;->getIcon()[B,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/AppInfo;->getName()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/AppInfo;->getPackageName()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/BasalMetabolicRateRecord$Builder;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Landroid/healthconnect/datatypes/units/Power;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/BasalMetabolicRateRecord$Builder;->build()Landroid/healthconnect/datatypes/BasalMetabolicRateRecord;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/BasalMetabolicRateRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/BasalMetabolicRateRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/BasalMetabolicRateRecord;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/ZoneOffset;Landroid/healthconnect/datatypes/units/Power;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/BasalMetabolicRateRecord;->getBasalMetabolicRate()Landroid/healthconnect/datatypes/units/Power;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/CyclingPedalingCadenceRecord$Builder;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Ljava/util/List;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/CyclingPedalingCadenceRecord$Builder;->build()Landroid/healthconnect/datatypes/CyclingPedalingCadenceRecord;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/CyclingPedalingCadenceRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/CyclingPedalingCadenceRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/CyclingPedalingCadenceRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/CyclingPedalingCadenceRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/CyclingPedalingCadenceRecord$CyclingPedalingCadenceRecordSample;-><init>(DLjava/time/Instant;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/CyclingPedalingCadenceRecord$CyclingPedalingCadenceRecordSample;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/CyclingPedalingCadenceRecord$CyclingPedalingCadenceRecordSample;->getRevolutionsPerMinute()D,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/CyclingPedalingCadenceRecord$CyclingPedalingCadenceRecordSample;->getTime()Ljava/time/Instant;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/CyclingPedalingCadenceRecord$CyclingPedalingCadenceRecordSample;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/CyclingPedalingCadenceRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/CyclingPedalingCadenceRecord;->getSamples()Ljava/util/List;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/CyclingPedalingCadenceRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/DataOrigin$Builder;-><init>()V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/DataOrigin$Builder;->build()Landroid/healthconnect/datatypes/DataOrigin;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/DataOrigin$Builder;->setPackageName(Ljava/lang/String;)Landroid/healthconnect/datatypes/DataOrigin$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/DataOrigin;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/DataOrigin;->getPackageName()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/DataOrigin;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device$Builder;-><init>()V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device$Builder;->build()Landroid/healthconnect/datatypes/Device;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device$Builder;->setManufacturer(Ljava/lang/String;)Landroid/healthconnect/datatypes/Device$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device$Builder;->setModel(Ljava/lang/String;)Landroid/healthconnect/datatypes/Device$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device$Builder;->setType(I)Landroid/healthconnect/datatypes/Device$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device;->DEVICE_TYPE_CHEST_STRAP:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device;->DEVICE_TYPE_FITNESS_BAND:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device;->DEVICE_TYPE_HEAD_MOUNTED:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device;->DEVICE_TYPE_PHONE:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device;->DEVICE_TYPE_RING:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device;->DEVICE_TYPE_SCALE:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device;->DEVICE_TYPE_SMART_DISPLAY:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device;->DEVICE_TYPE_UNKNOWN:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device;->DEVICE_TYPE_WATCH:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device;->getManufacturer()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device;->getModel()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device;->getType()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Device;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/DistanceRecord$Builder;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Landroid/healthconnect/datatypes/units/Length;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/DistanceRecord$Builder;->build()Landroid/healthconnect/datatypes/DistanceRecord;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/DistanceRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/DistanceRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/DistanceRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/DistanceRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/DistanceRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/DistanceRecord;->getDistance()Landroid/healthconnect/datatypes/units/Length;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/DistanceRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ElevationGainedRecord$Builder;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Landroid/healthconnect/datatypes/units/Length;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ElevationGainedRecord$Builder;->build()Landroid/healthconnect/datatypes/ElevationGainedRecord;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ElevationGainedRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/ElevationGainedRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ElevationGainedRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/ElevationGainedRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ElevationGainedRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ElevationGainedRecord;->getElevation()Landroid/healthconnect/datatypes/units/Length;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ElevationGainedRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseEventRecord$Builder;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseEventRecord$Builder;->build()Landroid/healthconnect/datatypes/ExerciseEventRecord;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseEventRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/ExerciseEventRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseEventRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/ExerciseEventRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseEventRecord$ExerciseEventType;->EXERCISE_EVENT_TYPE_PAUSE:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseEventRecord$ExerciseEventType;->EXERCISE_EVENT_TYPE_REST:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseEventRecord$ExerciseEventType;->EXERCISE_EVENT_TYPE_UNKNOWN:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseEventRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseEventRecord;->getEventType()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseEventRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseLapRecord$Builder;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseLapRecord$Builder;->build()Landroid/healthconnect/datatypes/ExerciseLapRecord;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseLapRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/ExerciseLapRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseLapRecord$Builder;->setLength(Landroid/healthconnect/datatypes/units/Length;)Landroid/healthconnect/datatypes/ExerciseLapRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseLapRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/ExerciseLapRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseLapRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseLapRecord;->getLength()Landroid/healthconnect/datatypes/units/Length;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/ExerciseLapRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/FloorsClimbedRecord$Builder;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;I)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/FloorsClimbedRecord$Builder;->build()Landroid/healthconnect/datatypes/FloorsClimbedRecord;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/FloorsClimbedRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/FloorsClimbedRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/FloorsClimbedRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/FloorsClimbedRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/FloorsClimbedRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/FloorsClimbedRecord;->getFloors()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/FloorsClimbedRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HeartRateRecord$Builder;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Ljava/util/List;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HeartRateRecord$Builder;->build()Landroid/healthconnect/datatypes/HeartRateRecord;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HeartRateRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/HeartRateRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HeartRateRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/HeartRateRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HeartRateRecord$HeartRateSample;-><init>(JLjava/time/Instant;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HeartRateRecord$HeartRateSample;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HeartRateRecord$HeartRateSample;->getBeatsPerMinute()J,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HeartRateRecord$HeartRateSample;->getTime()Ljava/time/Instant;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HeartRateRecord$HeartRateSample;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HeartRateRecord;->BPM_MAX:Landroid/healthconnect/datatypes/AggregationType;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HeartRateRecord;->BPM_MIN:Landroid/healthconnect/datatypes/AggregationType;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HeartRateRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HeartRateRecord;->getSamples()Ljava/util/List;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HeartRateRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HydrationRecord$Builder;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Landroid/healthconnect/datatypes/units/Volume;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HydrationRecord$Builder;->build()Landroid/healthconnect/datatypes/HydrationRecord;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HydrationRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/HydrationRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HydrationRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/HydrationRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HydrationRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HydrationRecord;->getVolume()Landroid/healthconnect/datatypes/units/Volume;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/HydrationRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/InstantRecord;->getTime()Ljava/time/Instant;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/InstantRecord;->getZoneOffset()Ljava/time/ZoneOffset;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/IntervalRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/IntervalRecord;->getEndTime()Ljava/time/Instant;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/IntervalRecord;->getEndZoneOffset()Ljava/time/ZoneOffset;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/IntervalRecord;->getStartTime()Ljava/time/Instant;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/IntervalRecord;->getStartZoneOffset()Ljava/time/ZoneOffset;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/IntervalRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/MealType;->MEAL_TYPE_BREAKFAST:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/MealType;->MEAL_TYPE_DINNER:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/MealType;->MEAL_TYPE_LUNCH:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/MealType;->MEAL_TYPE_SNACK:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/MealType;->MEAL_TYPE_UNKNOWN:I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata$Builder;-><init>()V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata$Builder;->build()Landroid/healthconnect/datatypes/Metadata;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata$Builder;->setClientRecordId(Ljava/lang/String;)Landroid/healthconnect/datatypes/Metadata$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata$Builder;->setClientRecordVersion(J)Landroid/healthconnect/datatypes/Metadata$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata$Builder;->setDataOrigin(Landroid/healthconnect/datatypes/DataOrigin;)Landroid/healthconnect/datatypes/Metadata$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata$Builder;->setDevice(Landroid/healthconnect/datatypes/Device;)Landroid/healthconnect/datatypes/Metadata$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata$Builder;->setId(Ljava/lang/String;)Landroid/healthconnect/datatypes/Metadata$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata$Builder;->setLastModifiedTime(Ljava/time/Instant;)Landroid/healthconnect/datatypes/Metadata$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata;->getClientRecordId()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata;->getClientRecordVersion()J,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata;->getDataOrigin()Landroid/healthconnect/datatypes/DataOrigin;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata;->getDevice()Landroid/healthconnect/datatypes/Device;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata;->getId()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata;->getLastModifiedTime()Ljava/time/Instant;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Metadata;->setId(Ljava/lang/String;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->build()Landroid/healthconnect/datatypes/NutritionRecord;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setBiotin(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setCaffeine(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setCalcium(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setChloride(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setCholesterol(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setChromium(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setCopper(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setDietaryFiber(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setEnergy(Landroid/healthconnect/datatypes/units/Energy;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setEnergyFromFat(Landroid/healthconnect/datatypes/units/Energy;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setFolate(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setFolicAcid(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setIodine(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setIron(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setMagnesium(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setManganese(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setMealName(Ljava/lang/String;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setMealType(I)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setMolybdenum(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setMonounsaturatedFat(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setNiacin(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setPantothenicAcid(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setPhosphorus(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setPolyunsaturatedFat(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setPotassium(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setProtein(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setRiboflavin(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setSaturatedFat(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setSelenium(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setSodium(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setSugar(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setThiamin(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setTotalCarbohydrate(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setTotalFat(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setTransFat(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setUnsaturatedFat(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setVitaminA(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setVitaminB12(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setVitaminB6(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setVitaminC(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setVitaminD(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setVitaminE(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setVitaminK(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord$Builder;->setZinc(Landroid/healthconnect/datatypes/units/Mass;)Landroid/healthconnect/datatypes/NutritionRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getBiotin()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getCaffeine()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getCalcium()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getChloride()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getCholesterol()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getChromium()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getCopper()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getDietaryFiber()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getEnergy()Landroid/healthconnect/datatypes/units/Energy;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getEnergyFromFat()Landroid/healthconnect/datatypes/units/Energy;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getFolate()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getFolicAcid()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getIodine()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getIron()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getMagnesium()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getManganese()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getMealName()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getMealType()I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getMolybdenum()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getMonounsaturatedFat()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getNiacin()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getPantothenicAcid()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getPhosphorus()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getPolyunsaturatedFat()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getPotassium()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getProtein()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getRiboflavin()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getSaturatedFat()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getSelenium()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getSodium()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getSugar()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getThiamin()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getTotalCarbohydrate()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getTotalFat()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getTransFat()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getUnsaturatedFat()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getVitaminA()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getVitaminB12()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getVitaminB6()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getVitaminC()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getVitaminD()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getVitaminE()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getVitaminK()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->getZinc()Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/NutritionRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/PowerRecord$Builder;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Ljava/util/List;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/PowerRecord$Builder;->build()Landroid/healthconnect/datatypes/PowerRecord;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/PowerRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/PowerRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/PowerRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/PowerRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/PowerRecord$PowerRecordSample;-><init>(Landroid/healthconnect/datatypes/units/Power;Ljava/time/Instant;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/PowerRecord$PowerRecordSample;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/PowerRecord$PowerRecordSample;->getPower()Landroid/healthconnect/datatypes/units/Power;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/PowerRecord$PowerRecordSample;->getTime()Ljava/time/Instant;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/PowerRecord$PowerRecordSample;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/PowerRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/PowerRecord;->getSamples()Ljava/util/List;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/PowerRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Record;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Record;->getMetadata()Landroid/healthconnect/datatypes/Metadata;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Record;->getRecordType()I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/Record;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_ACTIVE_CALORIES_BURNED:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_BASAL_METABOLIC_RATE:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_CYCLING_PEDALING_CADENCE:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_DISTANCE:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_ELEVATION_GAINED:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_EXERCISE_EVENT:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_EXERCISE_LAP:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_FLOORS_CLIMBED:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_HEART_RATE:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_HYDRATION:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_NUTRITION:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_POWER:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_SLEEP_SESSION:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_SLEEP_STAGE:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_SPEED:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_STEPS:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_STEPS_CADENCE:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_SWIMMING_STROKES:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_TOTAL_CALORIES_BURNED:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_UNKNOWN:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_WHEELCHAIR_PUSHES:I,sdk,system-api,test-api
Landroid/healthconnect/datatypes/SpeedRecord$Builder;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Ljava/util/List;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/SpeedRecord$Builder;->build()Landroid/healthconnect/datatypes/SpeedRecord;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/SpeedRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/SpeedRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/SpeedRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/SpeedRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/SpeedRecord$SpeedRecordSample;-><init>(Landroid/healthconnect/datatypes/units/Velocity;Ljava/time/Instant;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/SpeedRecord$SpeedRecordSample;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/SpeedRecord$SpeedRecordSample;->getSpeed()Landroid/healthconnect/datatypes/units/Velocity;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/SpeedRecord$SpeedRecordSample;->getTime()Ljava/time/Instant;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/SpeedRecord$SpeedRecordSample;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/SpeedRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/SpeedRecord;->getSamples()Ljava/util/List;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/SpeedRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsCadenceRecord$Builder;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Ljava/util/List;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsCadenceRecord$Builder;->build()Landroid/healthconnect/datatypes/StepsCadenceRecord;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsCadenceRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/StepsCadenceRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsCadenceRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/StepsCadenceRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsCadenceRecord$StepsCadenceRecordSample;-><init>(DLjava/time/Instant;)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsCadenceRecord$StepsCadenceRecordSample;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsCadenceRecord$StepsCadenceRecordSample;->getRate()D,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsCadenceRecord$StepsCadenceRecordSample;->getTime()Ljava/time/Instant;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsCadenceRecord$StepsCadenceRecordSample;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsCadenceRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsCadenceRecord;->getSamples()Ljava/util/List;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsCadenceRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsRecord$Builder;-><init>(Landroid/healthconnect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;J)V,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsRecord$Builder;->build()Landroid/healthconnect/datatypes/StepsRecord;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/StepsRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/healthconnect/datatypes/StepsRecord$Builder;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsRecord;->getCount()J,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/StepsRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/BloodGlucose;->compareTo(Landroid/healthconnect/datatypes/units/BloodGlucose;)I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/BloodGlucose;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/BloodGlucose;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/BloodGlucose;->fromMillimolesPerLiter(D)Landroid/healthconnect/datatypes/units/BloodGlucose;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/BloodGlucose;->getInMillimolesPerLiter()D,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/BloodGlucose;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/BloodGlucose;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Energy;->compareTo(Landroid/healthconnect/datatypes/units/Energy;)I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Energy;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Energy;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Energy;->fromJoules(D)Landroid/healthconnect/datatypes/units/Energy;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Energy;->getInJoules()D,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Energy;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Energy;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Length;->compareTo(Landroid/healthconnect/datatypes/units/Length;)I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Length;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Length;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Length;->fromMeters(D)Landroid/healthconnect/datatypes/units/Length;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Length;->getInMeters()D,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Length;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Length;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Mass;->compareTo(Landroid/healthconnect/datatypes/units/Mass;)I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Mass;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Mass;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Mass;->fromKilograms(D)Landroid/healthconnect/datatypes/units/Mass;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Mass;->getInKilograms()D,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Mass;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Mass;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Percentage;->compareTo(Landroid/healthconnect/datatypes/units/Percentage;)I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Percentage;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Percentage;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Percentage;->fromValue(D)Landroid/healthconnect/datatypes/units/Percentage;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Percentage;->getValue()D,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Percentage;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Percentage;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Power;->compareTo(Landroid/healthconnect/datatypes/units/Power;)I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Power;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Power;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Power;->fromWatts(D)Landroid/healthconnect/datatypes/units/Power;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Power;->getInWatts()D,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Power;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Power;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Pressure;->compareTo(Landroid/healthconnect/datatypes/units/Pressure;)I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Pressure;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Pressure;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Pressure;->fromMillimetersOfMercury(D)Landroid/healthconnect/datatypes/units/Pressure;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Pressure;->getInMillimetersOfMercury()D,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Pressure;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Pressure;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Temperature;->compareTo(Landroid/healthconnect/datatypes/units/Temperature;)I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Temperature;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Temperature;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Temperature;->fromCelsius(D)Landroid/healthconnect/datatypes/units/Temperature;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Temperature;->getInCelsius()D,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Temperature;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Temperature;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Velocity;->compareTo(Landroid/healthconnect/datatypes/units/Velocity;)I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Velocity;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Velocity;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Velocity;->fromMetersPerSecond(D)Landroid/healthconnect/datatypes/units/Velocity;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Velocity;->getInMetersPerSecond()D,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Velocity;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Velocity;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Volume;->compareTo(Landroid/healthconnect/datatypes/units/Volume;)I,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Volume;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Volume;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Volume;->fromMilliliters(D)Landroid/healthconnect/datatypes/units/Volume;,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Volume;->getInMilliliters()D,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Volume;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/datatypes/units/Volume;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/healthconnect/internal/datatypes/utils/RecordMapper$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;Ljava/lang/Object;)V,core-platform-api,public-api,sdk,system-api,test-api
